---
- hosts: all
  become: true
  tasks:
    - name: update distibution debian
      apt:
        update_cache: yes
      when: ansible_facts['os_family'] == 'Debian'

    - name: update distibution centos
      shell: yum install -y yum-utils
      when: ansible_facts['os_family'] == 'RedHat'
    - name: install prerequisite debian
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg2
          - lsb-release
      when: ansible_facts['os_family'] == 'Debian'

    - name: install prerequisite centos
      shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      when: ansible_facts['os_family'] == 'RedHat'

    - name: truc curl chelou
      shell: curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      when: ansible_facts['os_family'] == 'Debian'
    - name: truc repo chelou
      shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
      when: ansible_facts['os_family'] == 'Debian'
    - name: truc repo chelou
      shell: echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      when: ansible_facts['os_family'] == 'Debian'

    - name: update distibution
      apt:
        update_cache: yes
      when: ansible_facts['os_family'] == 'Debian'

    - name: install docker-ce
      apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
      when: ansible_facts['os_family'] == 'Debian'

    - name: install docker centos
      shell: yum install docker-ce docker-ce-cli containerd.io
      when: ansible_facts['os_family'] == 'RedHat'

    - name: delete directory
      file:
        path: /TP_Docker
        state: absent
    - name: copy repo TP
      copy: 
        src: TP_Docker/
        dest: /TP_Docker/
  # d√©marrage du service
    - name: start docker service
      service:
        name: docker start
        state: started
        enabled: true
    # - name: docker build worker
    #   shell: docker build -t worker-app /TP_Docker/worker/  
    # - name: docker build vote
    #   shell: docker build -t vote-app /TP_Docker/vote/     
    # - name: docker build result
    #   shell: docker build -t result-app /TP_Docker/result/     